# syntax=docker/dockerfile:1.2

ARG PYTHON_VERSION=3.6
FROM mcr.microsoft.com/vscode/devcontainers/python:${PYTHON_VERSION}

# cache pip?
RUN --mount=type=cache,target=/root/.cache

# Install needed packages and setup non-root user. Use a separate RUN statement to add your
# own dependencies. A user of "automatic" attempts to reuse an user ID if one already exists.
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG ENABLE_NONROOT_DOCKER=true
COPY files/docker-debian.sh /tmp/library-scripts/
RUN /bin/bash /tmp/library-scripts/docker-debian.sh "${ENABLE_NONROOT_DOCKER}" "/var/run/docker-host.sock" "/var/run/docker.sock" "vscode"

# Allow the vscode user to pip install globally w/o sudo
ENV PIP_TARGET=/usr/local/pip-global
ENV PYTHONPATH=${PIP_TARGET}:${PYTHONPATH}
ENV PATH=${PIP_TARGET}/bin:${PATH}
RUN if ! cat /etc/group | grep -e "^pip-global:" > /dev/null 2>&1; then groupadd -r pip-global; fi \
    && usermod -a -G pip-global vscode \
    && umask 0002 && mkdir -p ${PIP_TARGET} \
    && chown :pip-global ${PIP_TARGET} \
    && ( [ ! -f "/etc/profile.d/00-restore-env.sh" ] || sed -i -e "s/export PATH=/export PATH=\/usr\/local\/pip-global:/" /etc/profile.d/00-restore-env.sh )

ARG BIOTHINGS_GIT=https://github.com/biothings/biothings.api.git
# VERSION can be a version from PyPI or a git tag/revision/branch
ARG BIOTHINGS_VERSION=master
ARG BIOTHINGS_EXTRA_REQUIRES=hub,web_extra

RUN pip3 install --upgrade pip
# install cryptography, 1) we need this to generate SSH keys 2) install w/o Rust
RUN CRYPTOGRAPHY_DONT_BUILD_RUST=1 pip3 install cryptography
# if we can't find the version from pypi then try git
RUN pip3 install biothings[${BIOTHINGS_EXTRA_REQUIRES}]==${BIOTHINGS_VERSION} \
    || pip3 install "git+${BIOTHINGS_GIT}@${BIOTHINGS_VERSION}#egg=biothings[${BIOTHINGS_EXTRA_REQUIRES}]"

ARG API_GIT=https://github.com/biothings/biothings_studio.git
ARG API_TAG=master
ARG API_NAME=biothings-hub
ENV SRC_URI=mongodb://mongodb:27017
ENV SRC_DB=biothings_src
ENV TARGET_URI=mongodb://mongodb:27017
ENV TARGET_DB=biothings_target
ENV HUB_URI=mongodb://mongodb:27017
ENV HUB_DB=biothings_hub

# checkout code
RUN mkdir -p /tmp/git-download
WORKDIR /tmp/git-download
RUN git clone ${API_GIT} . && git checkout ${API_TAG}

# recursively install deps
RUN find . -maxdepth 1 -name 'requirements*.txt' -exec \
        pip3 -r {} \;

# move to proper directory
RUN if [ -f src/bin/hub.py ] ; \
    then \
        mv /tmp/git-download /home/vscode/biothings-hub; \
    elif [ -f bin/hub.py ] ; \
    then \
        mkdir -p /home/vscode/biothings-hub && mv /tmp/git-download /home/vscode/biothings-hub/src; \
    else \ 
        echo "Does not recognize directory structure"; exit -1; \
    fi

WORKDIR /home/vscode/biothings-hub/src

# Remove existing ssh keys
RUN rm -f bin/ssh_host_key \
    && rm -f bin/ssh_host_key.pub \
    && ln -sv /data/biothings/ssh_host_key bin/ssh_host_key \
    && ln -sv /data/biothings/ssh_host_key.pub bin/ssh_host_key.pub

RUN mv -f config_studio_hub.py config_hub.py 2>/dev/null || true
ADD files/config.py .
RUN sed -i s/__REPLACE_WITH_API_NAME/${API_NAME}/g config.py

# create dirs
RUN mkdir /data
RUN ["/bin/bash", "-c", "mkdir -p /data/biothings/{datasources,plugins,dataupload,diff,logs,release,cache,run,esbackup}"]

# fix permissions
RUN chown -R vscode:vscode /data/biothings && chown -R vscode:vscode /home/vscode

# export persistent data
VOLUME [ "/data" ]

EXPOSE 7080/tcp
EXPOSE 7022/tcp

# Install additional packages
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
        ne \
        vim \
    && pip3 install ipython

# Cleanup
RUN apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts/

USER vscode
ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]
